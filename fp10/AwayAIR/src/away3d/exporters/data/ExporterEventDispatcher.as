package away3d.exporters.data{	 	import flash.events.Event;	import flash.events.EventDispatcher;	 	import away3d.exporters.data.ExporterEvent;		public class ExporterEventDispatcher extends EventDispatcher	{		  		public function ExporterEventDispatcher():void		{ 		}				public function dispatchCancel():void		{			var oe:ExporterEvent = new ExporterEvent(ExporterEvent.SAVE_CANCELED);			dispatchEvent(oe);		}				public function dispatchSave(percent:Number = 100):void		{			var oe:ExporterEvent = new ExporterEvent(ExporterEvent.SAVE_COMPLETE);			oe.percent = percent;			dispatchEvent(oe);		}				public function dispatchGenerated():void		{			var oe:ExporterEvent = new ExporterEvent(ExporterEvent.GENERATION_COMPLETE);			dispatchEvent(oe);		}				public function get hasSaveListener():Boolean		{			return hasEventListener(ExporterEvent.SAVE_COMPLETE);		}				public function get hasCancelListener():Boolean		{			return hasEventListener(ExporterEvent.SAVE_CANCELED);		}				public function get hasGenerateListener():Boolean		{			return hasEventListener(ExporterEvent.GENERATION_COMPLETE);		}				/**		 * Default method for adding a generatecomplete event listener		 * 		 * @param	listener		The listener function		 */		public function addOnGenerateComplete(listener:Function):void        {			addEventListener(ExporterEvent.GENERATION_COMPLETE, listener, false, 0, false);        }				/**		 * Default method for removing a generatecomplete event listener		 * 		 * @param	listener		The listener function		 */		public function removeOnGenerateComplete(listener:Function):void        {            removeEventListener(ExporterEvent.GENERATION_COMPLETE, listener, false);        }				/**		 * Default method for adding a savecomplete event listener		 * 		 * @param	listener		The listener function		 */		public function addOnSaveComplete(listener:Function):void        {			addEventListener(ExporterEvent.SAVE_COMPLETE, listener, false, 0, false);        }				/**		 * Default method for removing a savecomplete event listener		 * 		 * @param	listener		The listener function		 */		public function removeOnSaveComplete(listener:Function):void        {            removeEventListener(ExporterEvent.SAVE_COMPLETE, listener, false);        }				/**		 * Default method for adding a savecanceled event listener		 * 		 * @param	listener		The listener function		 */		public function addOnSaveCanceled(listener:Function):void        {			addEventListener(ExporterEvent.SAVE_CANCELED, listener, false, 0, false);        }				/**		 * Default method for removing a savecanceled event listener		 * 		 * @param	listener		The listener function		 */		public function removeOnSaveCanceled(listener:Function):void        {            removeEventListener(ExporterEvent.SAVE_CANCELED, listener, false);        }		 	}}