//AS3LiteExporterAIR version 1.0, Flash 10 Away3DLite, generated by Away3D: http://www.away3d.com
package loaders.assets.awd
{
	import away3dlite.arcane;
	import away3dlite.containers.*;
	import away3dlite.materials.*;
	import away3dlite.core.base.*;
	import away3dlite.primitives.*;
	import flash.display.Bitmap;
	import flash.display.BitmapData;

	import flash.geom.Matrix3D;
	import flash.geom.Vector3D;

	use namespace arcane;

	public class TurtleAWD extends ObjectContainer3D
	{
		[Embed(source="turtle.jpg")]
		private var Aw_0_Bitmap:Class;

		private var objs:Object = {};
		private var geos:Array = [];
		private var oList:Array =[];
		private var aC:Array;
		private var aV:Array;
		private var aU:Array;
		private var _scale:Number;

		public function TurtleAWD(scaling:Number = 1)
		{
			_scale = scaling;
			setSource();
			addContainers();
			buildMeshes();
			buildMaterials();
			cleanUp();
		}

		private function buildMeshes():void
		{
			var m0:Matrix3D = new Matrix3D(new Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,(-0.01251999999999498*_scale),(0.3919219999999939*_scale),(-0.11862150000001748*_scale),1]));
			m0.position = new Vector3D(-0.01251999999999498,-0.3919219999999939,-0.11862150000001748);
			objs.obj0 = {name:"aw_0",  transform:m0,  container:0, bothsides:false, material:null, sortType:SortType.CENTER};

			objs.obj0.geo=geos[0];

			var ref:Object;
			var mesh:Mesh;
			var j:int;
			var av:Array;
			var au:Array;
			var aRef:Array;
			var index:int;

			for(var i:int = 0;i<1;++i){
				ref = objs["obj"+i];
				index = 0;
				if(ref != null){
					mesh = new Mesh();
					mesh.type = "AS3LiteExport"
					mesh.bothsides = ref.bothsides;
					mesh.sortType = ref.sortType;
					mesh.name = ref.name;
					mesh.transform.matrix3D = ref.transform;

					if(ref.material != null)
						mesh.material = ref.material;

					if(ref.container != -1)
						aC[ref.container].addChild(mesh);

					oList.push(mesh);

					aRef = ref.geo.f.split(",");

					for(j = 0;j<aRef.length;j+=6){
						av = ref.geo.aV[parseInt(aRef[j], 16)].split("/");
						mesh._vertices.push(Number(parseFloat(av[0]))*_scale, -Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);
						av = ref.geo.aV[parseInt(aRef[j+1],16)].split("/");
						mesh._vertices.push(Number(parseFloat(av[0]))*_scale, -Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);
						av = ref.geo.aV[parseInt(aRef[j+2],16)].split("/");
						mesh._vertices.push(Number(parseFloat(av[0]))*_scale, -Number(parseFloat(av[1]))*_scale, Number(parseFloat(av[2]))*_scale);

						mesh._indices.push(index, index+1, index+2);
						mesh._faceLengths.push(3);
						index+=3;

						au = ref.geo.aU[parseInt(aRef[j+3],16)].split("/");
						mesh._uvtData.push(parseFloat(au[0]), 1-parseFloat(au[1]), 0);
						au = ref.geo.aU[parseInt(aRef[j+4],16)].split("/");
						mesh._uvtData.push(parseFloat(au[0]), 1-parseFloat(au[1]), 0);
						au = ref.geo.aU[parseInt(aRef[j+5],16)].split("/");
						mesh._uvtData.push(parseFloat(au[0]), 1-parseFloat(au[1]), 0);
					}

					mesh.buildFaces();

				}
			}
		}


		private function setSource():void
		{
			var geo0:Object = {};
			geo0.aVstr="-c.01a0/-74.a2c/128.1271,-15.1467/-6d.2219/102.16f0,-20.1d58/-5e.130c/128.1271,-15.1467/-54.c9d/102.16f0,-0.248d/-4a.1cf8/102.16f0,-0.248d/-49.5a8/128.1271,15.1466/-54.c9d/102.16f0,20.1d58/-5e.130c/128.1271,15.1466/-6c.ac9/102.16f0,a.1043/-74.a2c/128.1271,-0.248d/-74.a2c/102.16f0,-0.248d/-7f.1122/128.1271,-1f.0176/-8a.1dcf/155.998,-24.1cdc/-5a.1f34/15a.cd0,-0.248d/-47.20cc/15a.cd0,25.5b8/-5a.1f34/15a.cd0,1e.11f9/-89.543/155.998,-0.21ee/-94.14f4/155.998,-1e.2255/-63.1dc5/17c.0138,-17.0b9/-91.1732/17e.1281,-0.248d/-4f.2030/179.1342,1e.225f/-63.1dc5/17c.0138,13.0041/-91.404/17e.01f3,-0.1ff2/-94.1509/180.2216,f.2371/-65.9a7/18d.26d6,-0.248d/-5e.7a7/191.1781,9.406/-7c.1449/197.1035,-0.2155/-85.268b/198.02f4,-a.1fa1/-7c.1449/197.1035,-11.1e6a/-65.9a7/18d.26d6,-0.248d/-6d.5ca/19f.1e2b,9a.f86/7.230f/118.b3f,3e.1b20/-42.1d95/e7.015c,80.7b0/20.1f91/f7.cc4,33.122f/-22.2005/af.2448,85.1fac/14.dcd/e2.dc9,60.ee5/-22.2005/8d.130d,76.20c8/-57.17e0/b3.1e3d,96.1993/9.592/f7.cc4,b0.2169/2e.13ee/124.aab,92.2397/41.789/f4.cf0,98.148d/42.1127/d9.e30,ad.45c/1f.15fe/103.c3a,cb.022f/80.1c05/109.beb,b8.d4e/83.826/ee.d35,c1.1b47/93.faa/c4.f36,c7.c3c/70.1481/e2.dc9,ee.17fd/b2.1514/ca.ee7,-33.122f/-22.2005/af.2448,-3e.1b20/-42.1d95/e7.015c,-80.7b0/20.1f91/f7.cc4,-9a.f86/7.230f/118.b3f,-85.1fac/14.dcd/e2.dc9,-60.ee5/-22.2005/8d.130d,-96.1989/9.592/f7.cc4,-76.20c8/-57.17e0/b3.1e3d,-b0.2169/2e.13ee/124.aab,-92.2397/41.789/f4.cf0,-98.148d/42.1127/d9.e30,-ad.45d/1f.15fe/103.c3a,-cb.022f/80.1c05/109.beb,-b8.d4e/83.826/ee.d35,-c1.1b47/93.faa/c4.f36,-c7.c3c/70.1481/e2.dc9,-ee.17fd/b2.1514/ca.ee7,48.1170/-c.121b/-a0.10aa,36.16c6/-c.121b/-a4.252f,57.52c/21.cc1/-fe.17c7,45.030b/22.2089/-114.1c35,1b.552/-22.2005/-f4.9e1,2b.896/a.21c5/-127.dde,56.1380/a.dcd/-116.d2d,69.1cdd/-22.2005/-df.16f9,-38.021a/1e.1a64/-117.1e19,-31.5fa/-c.121b/-a4.252f,-4c.e23/21.184f/-103.01b4,-43.dc9/-c.121b/-a0.10aa,-4a.11f9/9.1439/-11b.205a,-64.4d7/-22.2005/-df.16f9,-1d.2539/6.1db0/-129.253b,-19.a59/-22.2005/-f4.9e1,72.2144/6a.fa6/-149.105e,67.bc6/72.2626/-15a.170f,2d.b58/44.005f/-16b.b90,46.1c4d/39.16ad/-164.7ee,-56.0034/6d.e71/-15d.2149,-64.697/68.147a/-14e.2504,-3d.150b/38.1f90/-169.1901,-22.01ba/42.9ba/-173.2369,33.1fb9/65.f2c/-19c.1e58,-2e.53d/66.1752/-19f.1e2b,0.248d/-c.121b/-af.e7b,-0.248d/-4.12b7/a.17de,48.0208/-c.121b/-2c.134c,51.1001/-c.121b/-6.17cb,51.1001/-c.121b/1f.ac6,48.0208/-c.121b/45.647,35.d32/-c.121b/64.62c,1d.004b/-c.121b/78.2025,-0.248d/-c.121b/7f.1bcb,-1d.004c/-c.121b/78.2025,-35.d28/-c.121b/64.62c,-48.0209/-c.121b/45.647,-51.1001/-c.121b/1f.ac6,-51.1001/-c.121b/-6.17cb,-48.0209/-c.121b/-2c.134c,0.248d/-22.2005/-f7.1b37,80.7b0/-22.2005/-7b.1bae,92.2397/-22.2005/-36.2048,92.2397/-22.2005/11.1384,80.7b0/-22.2005/56.eea,-0.248d/-22.2005/bd.1b8b,-80.7b0/-22.2005/56.eea,-92.2397/-22.2005/11.1384,-92.2397/-22.2005/-36.2048,-80.7b0/-22.2005/-7b.1bae,0.248d/-42.1d95/-169.dc5,2b.264a/-42.1d95/-14d.1f40,62.9de/-42.1d95/-108.23da,a0.072/-42.1d95/-a8.12d5,b6.1255/-42.1d95/-55.202d,b6.1255/-42.1d95/7.688,a0.072/-52.1c5c/60.1be6,-0.248d/-32.1ecd/f8.9f4,-a0.072/-52.1c5c/60.1be6,-b6.1255/-42.1d95/7.688,-b6.1255/-42.1d95/-55.202d,-a0.072/-42.1d95/-a8.12d5,-62.9de/-42.1d95/-108.23da,-2b.264a/-42.1d95/-14d.1f40,0.248d/-4d.248a/-165.237f,2b.264a/-4d.248a/-146.2399,60.ee5/-51.50b/-108.23da,9e.579/-54.c9d/-a8.12d5,b4.175c/-57.142f/-52.ed7,b4.175c/-5a.1bc0/3.1c41,9e.579/-6c.ac9/67.1782,74.25cf/-75.217d/ac.12e8,3e.1b20/-71.029b/ed.2408,-3e.1b20/-71.029b/ed.2408,-74.25cf/-75.217d/ac.12e8,-9e.579/-6c.ac9/67.1782,-b4.175c/-5a.1bc0/3.1c41,-b4.175c/-57.142f/-52.ed7,-9e.579/-54.c9d/-a8.12d5,-60.ee5/-51.50b/-108.23da,-2b.264a/-4d.248a/-146.2399,0.248d/-7f.1122/-f0.1f9b,22.1851/-7f.1122/-e9.23f5,4d.1a0e/-81.0162/-c4.0164,80.7b0/-82.18b3/-7b.1bae,91.018e/-85.2045/-36.2048,91.018e/-87.1085/e.022e,80.7b0/-8f.fe9/56.eea,5e.13ec/-97.f4d/8a.01ad,31.1735/-97.f4d/a9.0192,-0.248d/-98.269e/c4.1731,-0.248d/-84.8f4/ff.59a,-31.1736/-97.f4d/a9.0192,-5e.13ec/-97.f4d/8a.01ad,-80.7b0/-8f.fe9/56.eea,-91.018e/-87.1085/e.022e,-91.018e/-85.2045/-36.2048,-80.7b0/-82.18b3/-7b.1bae,-4d.1a04/-81.0162/-c4.0164,-22.1851/-7f.1122/-e9.23f5,-0.248d/-a2.1642/-71.eb2,1d.004b/-a2.1642/-6a.1316,35.d32/-a2.1642/-55.202d,46.70f/-a4.683/-36.2048,4f.1508/-a5.1dde/-10.24c7,4f.1508/-a7.e1f/18.f2a,46.70f/-a7.e1f/3e.aab,35.d32/-a8.2570/59.2040,1b.552/-a8.2570/6e.1328,-0.248d/-aa.15b0/75.ecf,-1b.552/-a8.2570/6e.1328,-35.d28/-a8.2570/59.2040,-46.70f/-a7.e1f/3e.aab,-4f.1508/-a7.e1f/18.f2a,-4f.1508/-a5.1dde/-10.24c7,-46.70f/-a4.683/-36.2048,-35.d28/-a2.1642/-55.202d,-1d.004c/-a2.1642/-6a.1316,-0.248d/-b2.1514/3.1c41";
			geo0.aUstr="0.c939b/0.28880,0.cd0a4/0.0cdfe,0.e2055/0.2719c,0.df28f/0.0bebc,0.e6ca1/0.0b71b,0.ea9aa/0.3d09,0.dfa30/0.0bebc,0.c9b3c/0.28880,0.c6d75/0.0d5a0,0.c0a47/0.29021,0.baeb9/0.4b572,0.e5d5e/0.487ab,0.f1479/0.4800a,0.e64ff/0.487ab,0.b2d06/0.4bd13,0.e27f6/0.1117,0.4b/0.6dac3,0.edf11/0.6a55b,0.e2f98/0.1117,0.aeffd/0.6e264,0.d9701/0.8044f,0.e3eda/0.7cee7,0.c380d/0.8583b,0.baeb9/0.85fdc,0.d8f60/0.8044f,0.d801e/0.8a486,0.32116/0.044aa,0.00f42/0.015ef4,0.46185/0.010366,0.014810/0.2719c,0.3c8ef/0.018519,0.01406f/0.328b7,0.015753/0.33f9b,0.0016e3/0.2d4cb,0.3dfd2/0.19bfd,0.34edd/0.0121eb,0.002626/0.0175d7,0.337fa/0.05b8e,0.527e3/0.0016e3,0.61466/0.01298c,0.623a8/0.1ba81,0.470c8/0.0d5a0,0.63a8b/0.1d165,0.8647/0.002626,0.95400/0.0bebc,0.97a26/0.016695,0.a4083/0.3d09,0.15f9/0.1c222,0.a5766/0.2793d,0.96ae4/0.0d5a0,0.bdc80/0.243d6,0.bf363/0.25ab9,0.015ef4/0.28880,0.47869/0.011a4a,0.337fa/0.010b07,0.007a1/0.2bde8,0.62b49/0.01406f,0.459e4/0.0bebc,0.99109/0.0175d7,0.87e61/0.1ab3f,0.47869/0.8f0d2,0.433bf/0.91e98,0.36d61/0.b2565,0.2c589/0.b3c48,0.2160f/0.9357c,0.2160f/0.a4824,0.20e6e/0.a5766,0.20e6e/0.944be,0.2ebae/0.a4824,0.2719c/0.90014,0.470c8/0.90014,0.365c0/0.b34a7,0.2b646/0.b4b8a,0.42c1e/0.92ddb,0.5573/0.b34a7,0.47869/0.8d9ee,0.2e40d/0.a21ff,0.35e1f/0.b0e81,0.2793d/0.8e18f,0.20e6e/0.a3141,0.2160f/0.91e98,0.206cd/0.a5766,0.2b646/0.deaed,0.1d906/0.e0972,0.0dd41/0.c9b3c,0.0d5a0/0.caa7e,0.1d906/0.ca2dd,0.2aea5/0.dfa30,0.1c9c4/0.e0972,0.29f63/0.df28f,0.1d165/0.c7516,0.29f63/0.dcc69,0.0cdfe/0.c7cb7,0.0cdfe/0.ca2dd,0.0016e3/0.f23bc,0.00f42/0.f32fe,0.002626/0.f3a9f,0.044aa/0.f1c1a,0.74d34/0.b9f77,0.76bb8/0.bfb04,0.a4083/0.b9f77,0.5/0.cfe6b,0.95400/0.cc162,0.9ec97/0.ce787,0.a946f/0.ce787,0.b2d06/0.cc162,0.ba718/0.c7516,0.bfb04/0.c11e8,0.c1989/0.b9f77,0.bfb04/0.b2d06,0.ba718/0.ac9d7,0.b2d06/0.1adb,0.a946f/0.a5766,0.9ec97/0.a5766,0.95400/0.1adb,0.5/0.a5766,0.76bb8/0.b532c,0.61c07/0.b9f77,0.62b49/0.c0a47,0.67f35/0.d4ab6,0.cf85/0.da643,0.92ddb/0.df28f,0.a5766/0.df28f,0.b6a0f/0.da643,0.c4ef1/0.d1cef,0.14997/0.c6d75,0.d154e/0.b9f77,0.14997/0.ad178,0.c4ef1/0.a21ff,0.b6a0f/0.998aa,0.a5766/0.94c5f,0.92ddb/0.94c5f,0.cf85/0.998aa,0.67f35/0.a0b1b,0.62b49/0.b3c48,0.45243/0.b9f77,0.c35/0.c4ef1,0.5d75d/0.d2c31,0.75c76/0.e27f6,0.8bb6a/0.e8384,0.a29a0/0.e8384,0.b97d6/0.e27f6,0.cef28/0.d801e,0.dbd27/0.c9b3c,0.dfa30/0.b9f77,0.dbd27/0.aa3b2,0.b97d6/0.916f7,0.cef28/0.9bed0,0.a29a0/0.8bb6a,0.8bb6a/0.8bb6a,0.75c76/0.916f7,0.5d75d/0.a12bc,0.c35/0.aeffd,0.eb8ec/0.c3fae,0.e467b/0.cf6c9,0.17a6b/0.c3fae,0.e55bd/0.cf6c9,0.d4315/0.dcc69,0.d3b74/0.dcc69,0.bbdfb/0.ecfcf,0.bb65a/0.17a6b,0.a66a9/0.f23bc,0.a5f08/0.f1c1a,0.8f0d2/0.f23bc,0.8f873/0.f1c1a,0.7829c/0.ecfcf,0.a21ff/0.e7be3,0.bb65a/0.e2055,0.6cb81/0.e2055,0.177/0.d787d,0.592b2/0.d801e,0.16201/0.c9b3c,0.4add1/0.c9b3c,0.16201/0.aa3b2,0.4add1/0.aa3b2,0.177/0.9c671,0.592b2/0.9bed0,0.bb65a/0.91e98,0.6cb81/0.91e98,0.77359/0.88602,0.8e18f/0.83215,0.8d9ee/0.83215,0.a21ff/0.8c30b,0.a4fc5/0.83215,0.b9f77/0.88da3,0.ba718/0.88602,0.d2490/0.271,0.d2c31/0.271,0.e2f98/0.a5f08,0.e3eda/0.a5f08,0.eb8ec/0.b1623,0.ea208/0.b1623,0.45243/0.b4b8a,0.e2f98/0.b4b8a,0.e2f98/0.b9f77,0.e2f98/0.bf363,0.e2f98/0.b97d6,0.45243/0.bf363,0.8f0d2/0.592b2,0.1adb/0.65910,0.118c3/0.592b2,0.8d24d/0.9eb1,0.95400/0.74593,0.82a74/0.6f1a6,0.7a8c1/0.85fdc,0.6dac3/0.7cee7,0.62b49/0.8c30b,0.5a996/0.822d3,0.496ed/0.8c30b,0.46927/0.822d3,0.32116/0.7cee7,0.2d4cb/0.85fdc,0.23c34/0.73df1,0.1a39e/0.7a8c1,0.1b2e0/0.67794,0.0c35/0.1117,0.0138ce/0.592b2,0.001e85/0.592b2,0.01312d/0.592b2,0.0c35/0.470c8,0.1b2e0/0.4add1,0.19bfd/0.37ca4,0.23c34/0.3dfd2,0.2cd2a/0.2bde8,0.31975/0.34edd,0.48f4c/0.25ab9,0.46185/0.30292,0.5a996/0.30292,0.623a8/0.25ab9,0.6dac3/0.34edd,0.5/0.2bde8,0.822d3/0.42c1e,0.95400/0.3d831,0.8caac/0.4eada,0.a75eb/0.c35,0.8e930/0.592b2,0.6b49d/0.592b2,0.68e78/0.61466,0.62b49/0.67f35,0.5a1f5/0.6d322,0.4f27b/0.700e8,0.44301/0.700e8,0.39b28/0.6d322,0.311d4/0.67f35,0.2b646/0.60cc4,0.297c2/0.592b2,0.29021/0.592b2,0.2aea5/0.510ff,0.30a33/0.49e8e,0.39387/0.45243,0.43b60/0.4247c,0.4f27b/0.4247c,0.59a54/0.45243,0.62b49/0.49e8e,0.68e78/0.510ff,0.1117/0.592b2,0.49e8e/0.592b2,0.496ed/0.592b2,0.00f42/0.5f5e1,0.00f42/0.592b2,0.00f42/0.52f84,0.00f42/0.58b11";
			geo0.aV= read(geo0.aVstr).split(",");
			geo0.aU= read(geo0.aUstr).split(",");
			geo0.f="0,1,2,0,1,2,1,3,2,1,3,2,3,4,5,3,4,5,2,3,5,2,3,5,4,6,5,4,6,5,6,7,5,6,2,5,6,8,7,6,1,2,8,9,7,1,7,2,a,b,8,8,9,1,b,9,8,9,7,1,0,b,1,0,9,1,b,a,1,9,8,1,c,0,d,a,0,b,0,2,d,0,2,b,d,2,e,b,2,c,2,5,e,2,5,c,5,7,e,5,2,c,7,f,e,2,d,c,7,9,f,2,7,d,9,10,f,7,a,d,b,11,9,9,e,7,11,10,9,e,a,7,c,11,0,a,e,0,11,b,0,e,9,0,12,c,d,f,a,b,13,c,12,10,a,f,14,12,e,11,f,c,12,d,e,f,b,c,f,15,e,d,12,c,15,14,e,12,11,c,10,15,f,a,12,d,10,16,15,a,10,12,11,16,10,e,10,a,11,17,16,e,13,10,17,11,13,13,e,10,13,11,c,10,e,a,15,18,14,12,14,11,18,19,14,14,15,11,16,18,15,10,14,12,16,1a,18,10,16,14,16,17,1a,10,13,16,17,1b,1a,13,17,16,1b,17,1c,17,13,16,17,13,1c,13,10,16,1d,13,12,18,10,f,1c,13,1d,16,10,18,19,1d,14,15,18,11,1d,12,14,18,f,11,18,1e,19,14,19,15,1a,1e,18,16,19,14,1a,1b,1e,16,17,19,1b,1c,1e,17,16,19,1e,1c,1d,19,16,18,1e,1d,19,19,18,15,1f,20,21,1a,1b,1c,20,22,21,1b,1d,1c,22,23,21,1d,1e,1c,22,24,23,1d,1f,1e,24,25,23,20,21,22,25,26,23,21,23,22,20,1f,26,24,25,23,25,20,26,21,24,23,27,21,28,26,1c,27,1f,21,27,1a,1c,26,28,21,29,27,1c,28,21,23,29,1c,1e,28,23,2a,29,22,29,2a,23,26,2a,22,23,29,2a,1f,27,29,25,2b,26,1f,2a,23,25,29,2b,28,2c,2c,27,2d,27,28,2b,26,27,2c,28,29,2c,27,28,2d,2c,29,2d,2d,28,2e,29,2e,2d,2a,2f,30,29,2a,2e,2a,29,2f,2e,27,2b,2f,2b,31,2a,27,2e,29,2b,2f,2b,2c,2f,2c,2d,32,2c,2d,2f,2d,2e,32,2d,2e,2f,30,2f,33,2e,2b,2f,2f,31,33,30,31,32,34,24,35,31,33,32,24,25,35,34,30,32,22,34,35,35,30,34,20,34,22,36,37,34,36,37,1e,37,35,34,37,1f,1e,33,31,36,1a,1b,36,31,37,36,1b,37,36,32,38,39,35,2b,38,32,33,38,35,25,2b,32,39,3a,35,38,2a,34,32,3a,22,35,2a,3b,34,3a,39,1e,28,36,34,3b,36,1e,39,33,3b,38,1a,39,26,33,36,3b,1a,36,39,39,3c,3d,38,31,3a,39,38,3c,38,2b,31,3a,3d,3e,2a,3a,30,3a,39,3d,2a,38,3a,3f,3a,3e,3b,28,2e,3b,3a,3f,39,28,3b,38,3f,3c,26,3b,2c,38,3b,3f,26,39,3b,3d,3c,40,3a,31,33,3e,3d,40,30,3a,33,3f,3e,40,3b,2e,32,3c,3f,40,2c,3b,32,41,42,43,3c,3d,3e,42,44,43,3d,3f,3e,42,45,44,3d,40,3f,45,46,44,40,41,3f,46,45,47,42,43,44,45,48,47,43,45,44,47,41,43,44,46,47,48,41,47,45,46,44,49,4a,4b,48,49,4a,4a,4c,4b,49,46,4a,4c,4d,4b,4b,4c,4d,4c,4e,4d,4b,4e,4c,4e,4f,4d,4e,4f,4c,4e,50,4f,4e,50,4f,4f,50,49,51,43,48,50,4a,49,43,49,48,43,44,51,3e,3f,52,44,52,51,3f,53,52,44,53,52,3f,54,53,44,46,53,3f,41,54,53,46,54,55,42,56,46,47,54,42,44,56,54,47,51,56,44,57,47,43,51,44,47,57,55,49,56,58,48,59,49,4b,56,48,4a,59,4d,57,56,4c,5a,5b,4b,4d,56,4d,4c,5b,4d,4f,57,4c,4f,5a,4f,58,57,4f,5c,5a,58,49,55,5d,48,58,4f,49,58,51,48,5d,52,59,51,53,5e,52,53,59,52,54,5e,53,53,54,59,55,56,5f,59,54,51,5f,56,57,5a,55,56,60,58,59,57,5a,56,5a,61,5b,57,58,5a,5a,5c,61,58,55,5a,5d,58,60,5b,42,5c,62,63,64,42,41,5c,63,65,64,41,5d,5c,65,66,64,5d,5e,5c,66,67,64,5e,5f,5c,67,68,64,5f,60,5c,68,69,64,60,61,5c,69,6a,64,61,62,5c,6a,6b,64,62,63,5c,6b,6c,64,63,64,5c,6c,6d,64,64,65,5c,6d,6e,64,65,66,5c,6e,6f,64,66,67,5c,6f,70,64,67,68,5c,70,71,64,68,69,5c,71,72,64,69,4c,5c,72,73,64,4c,4a,5c,73,74,64,4a,5b,5c,74,62,64,6a,45,5b,75,76,62,45,42,5b,76,63,62,48,6b,41,77,78,65,41,6b,5d,65,78,66,6b,6c,5d,78,79,66,6c,5e,5d,79,67,66,6d,5f,5e,7a,68,67,6c,6d,5e,79,7a,67,5f,6e,60,68,7b,69,6d,6e,5f,7a,7b,68,60,24,61,69,7c,6a,6e,24,60,7b,7c,69,61,24,62,6a,7c,6b,24,22,62,7c,7d,6b,62,22,63,6b,7d,6c,22,6f,63,7d,7e,6c,63,30,64,6c,7f,6d,6f,30,63,7e,7f,6c,64,35,65,6d,80,6e,30,35,64,7f,80,6d,65,35,66,6e,80,6f,35,70,66,80,81,6f,66,70,67,6f,81,70,70,71,67,81,82,70,67,71,68,70,82,71,71,72,68,82,83,71,72,69,68,83,72,71,72,73,69,83,84,72,69,73,4c,72,84,73,73,4e,4c,84,85,73,50,5b,4a,86,62,74,50,6a,5b,86,75,62,74,75,6a,87,88,75,75,45,6a,88,76,75,75,76,45,88,89,76,76,48,45,89,77,76,76,77,48,89,8a,77,77,6b,48,8a,78,77,77,78,6b,8a,8b,78,78,6c,6b,8b,79,78,79,6d,6c,8c,7a,79,78,79,6c,8b,8c,79,6d,7a,6e,7a,8d,7b,79,7a,6d,8c,8d,7a,6e,7a,24,7b,8d,7c,7a,25,24,8d,8e,7c,22,20,6f,7d,8f,7e,20,7b,6f,8f,90,7e,6f,31,30,7e,91,7f,7b,31,6f,90,91,7e,35,7c,70,80,92,81,37,7c,35,93,92,80,70,7c,71,81,92,82,7c,7d,71,92,94,82,71,7d,72,82,94,83,7d,7e,72,94,95,83,7e,73,72,95,84,83,7e,7f,73,95,96,84,7f,4e,73,96,85,84,7f,80,4e,96,97,85,80,50,4e,97,86,85,80,81,50,97,98,86,81,6a,50,98,75,86,81,74,6a,98,87,75,82,83,74,99,9a,9b,83,75,74,9a,9c,9b,83,76,75,9a,9d,9c,83,84,76,9a,9e,9d,84,77,76,9e,9f,9d,84,85,77,9e,a0,9f,85,78,77,a0,a1,9f,85,86,78,a0,a2,a1,86,79,78,a2,a3,a1,86,87,79,a2,a4,a3,87,7a,79,a4,a5,a3,87,88,7a,a6,a7,8d,88,25,7a,a7,8e,8d,88,89,25,a8,a9,aa,25,8a,20,8e,ab,8f,89,8a,25,a9,ac,aa,8b,37,31,ad,93,91,8b,8c,37,ae,af,b0,37,8d,7c,93,b1,92,8c,8d,37,af,b2,b0,7c,8e,7d,b3,b4,b5,8d,8e,7c,b1,b6,92,7d,8f,7e,b5,b7,b7,8e,8f,7d,b4,b7,b5,8f,90,7e,b7,b8,b7,90,7f,7e,b8,b9,b7,90,91,7f,b8,ba,b9,91,80,7f,ba,bb,b9,91,92,80,ba,bc,bb,92,81,80,bc,bd,bb,92,74,81,bc,be,bd,92,82,74,bc,bf,be,1,8b,3,c0,ae,c0,3,8b,31,c1,ad,91,3,31,7b,c1,91,90,4,3,7b,c2,c1,90,6,4,7b,c3,c4,90,20,6,7b,8f,c3,90,8a,6,20,ab,c3,8f,8a,8,6,ac,c5,c5,93,83,82,c6,c7,c8,93,94,83,c6,c9,c7,94,84,83,c9,ca,c7,94,95,84,c9,cb,ca,95,85,84,cb,cc,ca,95,96,85,cb,cd,cc,96,86,85,cd,ce,cc,96,97,86,cd,cf,ce,97,87,86,cf,d0,ce,97,98,87,cf,d1,d0,99,88,87,d2,d3,d0,98,99,87,d1,d2,d0,9a,89,88,d4,d5,d3,99,9a,88,d2,d4,d3,89,9b,8a,d5,d6,d7,9a,9b,89,d4,d6,d5,9c,9d,8a,d8,d9,d7,9b,9c,8a,d6,d8,d7,9d,9c,8b,d9,da,db,9c,9e,8b,da,dc,db,9e,8c,8b,dc,dd,db,9e,9f,8c,dc,de,dd,8c,9f,8d,dd,de,df,9f,a0,8d,de,e0,df,8d,a0,8e,df,e0,e1,a0,a1,8e,e0,e2,e1,8e,a2,8f,e1,e3,e4,a1,a2,8e,e2,e3,e1,a2,a3,8f,e3,e5,e4,8f,a3,90,e4,e5,e6,a3,a4,90,e5,e7,e6,90,a4,91,e6,e7,e8,a4,a5,91,e7,e9,e8,91,a5,92,e8,e9,ea,a5,93,92,e9,eb,ea,92,93,82,ea,eb,c8,a6,94,93,ec,c9,c6,a6,a7,94,ec,ed,c9,a7,95,94,ed,cb,c9,a7,a8,95,ed,ee,cb,a8,96,95,ee,cd,cb,a8,a9,96,ee,ef,cd,a9,97,96,ef,cf,cd,a9,aa,97,ef,f0,cf,aa,98,97,f0,d1,cf,aa,ab,98,f0,f1,d1,ab,99,98,f1,d2,d1,ab,ac,99,f1,f2,d2,ad,9a,99,f3,d4,d2,ac,ad,99,f2,f3,d2,ae,9b,9a,f4,d6,d4,ad,ae,9a,f3,f4,d4,af,9c,9b,f5,d8,d6,ae,af,9b,f4,f5,d6,9c,af,9e,da,f6,dc,af,b0,9e,f6,f7,dc,9e,b0,9f,dc,f7,de,b0,b1,9f,f7,f8,de,9f,b1,a0,de,f8,e0,b1,b2,a0,f8,f9,e0,a0,b3,a1,e0,fa,e2,b2,b3,a0,f9,fa,e0,a1,b4,a2,e2,fb,e3,b3,b4,a1,fa,fb,e2,b4,b5,a2,fb,fc,e3,a2,b5,a3,e3,fc,e5,b5,b6,a3,fc,fd,e5,a3,b6,a4,e5,fd,e7,b6,b7,a4,fd,fe,e7,a4,b7,a5,e7,fe,e9,b7,a6,a5,fe,ff,e9,a5,a6,93,e9,ff,eb,b8,a7,a6,100,ed,ec,b8,a8,a7,100,ee,ed,b8,a9,a8,100,ef,ee,b8,aa,a9,100,f0,ef,b8,ab,aa,100,f1,f0,b8,ac,ab,100,f2,f1,b8,ad,ac,100,f3,f2,b8,ae,ad,100,f4,f3,b8,af,ae,100,f5,f4,af,b8,b0,f6,101,f7,b0,b8,b1,f7,101,f8,b1,b8,b2,f8,101,f9,b2,b8,b3,f9,101,fa,b3,b8,b4,fa,101,fb,b4,b8,b5,fb,101,fc,b5,b8,b6,fc,101,fd,b6,b8,b7,fd,101,fe,b7,b8,a6,fe,101,ff,8a,9d,8,d7,d9,102,9d,a,8,d9,103,102,9d,8b,1,d9,db,104,a,9d,1,105,d9,104";
			geos.push(geo0);
		}

		private function buildMaterials():void
		{
				var aw_0_Bitmap:Bitmap = new Aw_0_Bitmap();
				applyMaterialToMesh("aw_0", aw_0_Bitmap.bitmapData);

		}

		private function applyMaterialToMesh(id:String, bmd:BitmapData):void
		{
			for(var i:int;i<meshes.length;++i){
				if(meshes[i].name == id){
					meshes[i].material = new BitmapMaterial(bmd);
					break;
				}
			}
		}

		private function cleanUp():void
		{
			for(var i:int = 0;i<1;++i){
				objs["obj"+i] == null;
			}
			aV = null;
			aU = null;
		}

		private function addContainers():void
		{
			aC = [];
			aC.push(this);
			var m0:Matrix3D = new Matrix3D(new Vector.<Number>([1,0,0,0,0,1,0,0,0,0,1,0,(0*_scale),(0*_scale),(0*_scale),1]));
			m0.position = new Vector3D(0,0,0);
			transform.matrix3D = m0;
			name = "main";
		}

		public function get containers():Array
		{
			return aC;
		}


		public function get meshes():Array
		{
			return oList;
		}


		private function read(str:String):String
		{
			var start:int= 0;
			var chunk:String;
			var end:int= 0;
			var dec:String = "";
			var charcount:int = str.length;
			for(var i:int = 0;i<charcount;++i){
				if (str.charCodeAt(i)>=44 && str.charCodeAt(i)<= 48 ){
					dec+= str.substring(i, i+1);
				}else{
					start = i;
					chunk = "";
					while(str.charCodeAt(i)!=44 && str.charCodeAt(i)!= 45 && str.charCodeAt(i)!= 46 && str.charCodeAt(i)!= 47 && i<=charcount){
						i++;
					}
					chunk = ""+parseInt("0x"+str.substring(start, i), 16 );
					dec+= chunk;
					i--;
				}
			}
			return dec;
		}

	}
}