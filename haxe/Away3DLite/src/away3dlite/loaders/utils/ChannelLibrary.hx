package away3dlite.loaders.utils;import away3dlite.core.utils.Debug;import away3dlite.loaders.data.ChannelData;import flash.xml.XML;/*** Store for all animation channels associated with an externally loaded file.*/class ChannelLibrary extends Hash<ChannelData>{	private var _channelArray:Array<ChannelData>;	private var _channelArrayDirty:Bool;		private function updateChannelArray():Void	{		_channelArray = [];		for (_channel in this) {			_channelArray.push(_channel);		}	}		/**	 * Adds an animation channel name reference to the library.	 */	public function addChannel(name:String, xml:XML, channelIndex:Int):ChannelData	{		//return if animation already exists		if (exists(name))			return get(name);				_channelArrayDirty = true;				var channelData:ChannelData = new ChannelData();		channelData.xml = xml;		channelData.channelIndex = channelIndex;		set(channelData.name = name, channelData);		return channelData;	}		/**	 * Returns an animation channel data object for the given name reference in the library.	 */	public function getChannel(name:String):ChannelData	{		//return if animation exists		if (exists(name))			return get(name);				Debug.warning("Channel '" + name + "' does not exist");				return null;	}		/**	 * Returns an array of all animation channels.	 */	public function getChannelArray():Array<ChannelData>	{		if (_channelArrayDirty)			updateChannelArray();					return _channelArray;	}}